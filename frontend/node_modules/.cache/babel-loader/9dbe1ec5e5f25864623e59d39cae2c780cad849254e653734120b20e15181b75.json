{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport sessionReducer from './session';\nimport spotsReducer from \"./spots\";\nimport reviewsReducer from \"./reviews\";\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n  spots: spotsReducer,\n  reviews: reviewsReducer\n});\nlet enhancer;\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","thunk","sessionReducer","spotsReducer","reviewsReducer","rootReducer","session","spots","reviews","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"sources":["/Users/kishaonia/Documents/GitHub/SNOWLFB/frontend/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport sessionReducer from './session';\nimport spotsReducer from \"./spots\";\nimport reviewsReducer from \"./reviews\"\n\nconst rootReducer = combineReducers({\n    session: sessionReducer,\n    spots: spotsReducer,\n    reviews: reviewsReducer\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\n\nexport default configureStore;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC9E,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,cAAc,MAAM,WAAW;AACtC,OAAOC,YAAY,MAAM,SAAS;AAClC,OAAOC,cAAc,MAAM,WAAW;AAEtC,MAAMC,WAAW,GAAGP,eAAe,CAAC;EAChCQ,OAAO,EAAEJ,cAAc;EACvBK,KAAK,EAAEJ,YAAY;EACnBK,OAAO,EAAEJ;AACb,CAAC,CAAC;AAEF,IAAIK,QAAQ;AAEZ,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCH,QAAQ,GAAGV,eAAe,CAACE,KAAK,CAAC;AACnC,CAAC,MAAM;EACL,MAAMY,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC,CAACC,OAAO;EAC9C,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAoC,IAAIlB,OAAO;EACxDS,QAAQ,GAAGO,gBAAgB,CAACjB,eAAe,CAACE,KAAK,EAAEY,MAAM,CAAC,CAAC;AAC7D;AAEA,MAAMM,cAAc,GAAIC,cAAc,IAAK;EACzC,OAAOvB,WAAW,CAACQ,WAAW,EAAEe,cAAc,EAAEX,QAAQ,CAAC;AAC3D,CAAC;AAGD,eAAeU,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}