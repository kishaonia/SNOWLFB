{"ast":null,"code":"var _jsxFileName = \"/Users/kishaonia/Documents/GitHub/SNOWLFB/frontend/src/components/LoginFormModal/index.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/LoginFormModal/index.js\nimport React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport \"./LoginForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginFormModal() {\n  _s();\n  const dispatch = useDispatch();\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const {\n    closeModal\n  } = useModal();\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({\n      credential,\n      password\n    })).then(closeModal).catch(async res => {\n      const data = await (res === null || res === void 0 ? void 0 : res.json());\n      if (data && data.errors) setErrors(data.errors);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"login-h1\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: error\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username or Email:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text-login\",\n          value: credential,\n          onChange: e => setCredential(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-submit-login\",\n        type: \"submit\",\n        disabled: credential.length < 4 || password.length < 6,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(LoginFormModal, \"LRKOHdsCSfG5uTfKC3PWfv+uYf0=\", false, function () {\n  return [useDispatch, useModal];\n});\n_c = LoginFormModal;\nexport default LoginFormModal;\nvar _c;\n$RefreshReg$(_c, \"LoginFormModal\");","map":{"version":3,"names":["React","useState","sessionActions","useDispatch","useModal","LoginFormModal","dispatch","credential","setCredential","password","setPassword","errors","setErrors","closeModal","handleSubmit","e","preventDefault","login","then","catch","res","data","json","map","error","idx","target","value","length"],"sources":["/Users/kishaonia/Documents/GitHub/SNOWLFB/frontend/src/components/LoginFormModal/index.js"],"sourcesContent":["// frontend/src/components/LoginFormModal/index.js\nimport React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport \"./LoginForm.css\";\n\nfunction LoginFormModal() {\n  const dispatch = useDispatch();\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const { closeModal } = useModal();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({ credential, password }))\n      .then(closeModal)\n      .catch(async (res) => {\n        const data = await res?.json();\n        if (data && data.errors) setErrors(data.errors);\n      });\n  };\n\n  return (\n    <>\n      <h1 className=\"login-h1\">Log In</h1>\n      <form className=\"login-form\" onSubmit={handleSubmit}>\n        {errors.map((error, idx) => (\n          <li key={idx}>{error}</li>\n        ))}\n\n        <label>\n          Username or Email:\n          <br></br>\n          <input\n            type=\"text-login\"\n            value={credential}\n            onChange={(e) => setCredential(e.target.value)}\n            required\n          />\n        </label>\n        <label>\n          Password:\n          <br></br>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </label>\n\n        <button\n            className=\"button-submit-login\"\n            type=\"submit\"\n            disabled={credential.length < 4 || password.length < 6}\n        >\n                Log In\n            </button>\n\n      </form>\n    </>\n  );\n}\n\nexport default LoginFormModal;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,cAAc,MAAM,qBAAqB;AACrD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAO,iBAAiB;AAAC;AAAA;AAEzB,SAASC,cAAc,GAAG;EAAA;EACxB,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM;IAAEY;EAAW,CAAC,GAAGT,QAAQ,EAAE;EAEjC,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClBJ,SAAS,CAAC,EAAE,CAAC;IACb,OAAON,QAAQ,CAACJ,cAAc,CAACe,KAAK,CAAC;MAAEV,UAAU;MAAEE;IAAS,CAAC,CAAC,CAAC,CAC5DS,IAAI,CAACL,UAAU,CAAC,CAChBM,KAAK,CAAC,MAAOC,GAAG,IAAK;MACpB,MAAMC,IAAI,GAAG,OAAMD,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,IAAI,EAAE;MAC9B,IAAID,IAAI,IAAIA,IAAI,CAACV,MAAM,EAAEC,SAAS,CAACS,IAAI,CAACV,MAAM,CAAC;IACjD,CAAC,CAAC;EACN,CAAC;EAED,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,UAAU;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAK,eACpC;MAAM,SAAS,EAAC,YAAY;MAAC,QAAQ,EAAEG,YAAa;MAAA,WACjDH,MAAM,CAACY,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBACrB;QAAA,UAAeD;MAAK,GAAXC,GAAG;QAAA;QAAA;QAAA;MAAA,QACb,CAAC,eAEF;QAAA,WAAO,oBAEL;UAAA;UAAA;UAAA;QAAA,QAAS,eACT;UACE,IAAI,EAAC,YAAY;UACjB,KAAK,EAAElB,UAAW;UAClB,QAAQ,EAAGQ,CAAC,IAAKP,aAAa,CAACO,CAAC,CAACW,MAAM,CAACC,KAAK,CAAE;UAC/C,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QACR;MAAA;QAAA;QAAA;QAAA;MAAA,QACI,eACR;QAAA,WAAO,WAEL;UAAA;UAAA;UAAA;QAAA,QAAS,eACT;UACE,IAAI,EAAC,UAAU;UACf,KAAK,EAAElB,QAAS;UAChB,QAAQ,EAAGM,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACW,MAAM,CAACC,KAAK,CAAE;UAC7C,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QACR;MAAA;QAAA;QAAA;QAAA;MAAA,QACI,eAER;QACI,SAAS,EAAC,qBAAqB;QAC/B,IAAI,EAAC,QAAQ;QACb,QAAQ,EAAEpB,UAAU,CAACqB,MAAM,GAAG,CAAC,IAAInB,QAAQ,CAACmB,MAAM,GAAG,CAAE;QAAA,UAC1D;MAEG;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAER;EAAA,gBACN;AAEP;AAAC,GA1DQvB,cAAc;EAAA,QACJF,WAAW,EAILC,QAAQ;AAAA;AAAA,KALxBC,cAAc;AA4DvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}